{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/victor_oliveira/Documents/Estudos/React/testevisto/src/pages/main/index.js\";\nimport React, { Component } from \"react\";\nimport api from \"../../services/api\";\nimport { Button, GridList, GridListTile, GridListTileBar, Grid } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nexport default class Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [],\n      page: 1,\n      productInfo: {}\n    };\n\n    this.prevPage = () => {\n      const {\n        page\n      } = this.state;\n\n      if (page === 1) {\n        return;\n      }\n\n      const pageNumber = page - 1;\n      this.setState({\n        page: pageNumber\n      });\n      this.loadProducts(pageNumber);\n    };\n\n    this.nextPage = () => {\n      const {\n        page\n      } = this.state;\n      const pageNumber = page + 1;\n      this.setState({\n        page: pageNumber\n      });\n      this.loadProducts(pageNumber);\n    };\n\n    this.divInfiniteScrollRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const intersectionObserver = new IntersectionObserver();\n    console.log(intersectionObserver);\n    this.loadProducts();\n  }\n\n  componentDidMount() {\n    async (page = 1) => {\n      const response = await api.get(`/v2/list?page=${page}&limit=30`);\n      console.log(response.data);\n      this.setState({\n        products: response.data\n      });\n    };\n  }\n\n  render() {\n    const {\n      page\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: [/*#__PURE__*/_jsxDEV(GridList, {\n        cellHeight: 180,\n        className: \"grid\",\n        children: this.state.products.map(products => /*#__PURE__*/_jsxDEV(GridListTile, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: products.download_url,\n            width: \"200\",\n            height: \"200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            title: products.id,\n            subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", products.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 27\n            }, this),\n            actionIcon: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/products/${products.id}`,\n              children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                className: \"button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, products.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"pagesleft\",\n          variant: \"contained\",\n          disabled: page === 1,\n          onClick: this.prevPage,\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"pagesright\",\n          variant: \"contained\",\n          onClick: this.nextPage,\n          children: \"Pr\\xF3xima\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: this.divInfiniteScrollRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/victor_oliveira/Documents/Estudos/React/testevisto/src/pages/main/index.js"],"names":["React","Component","api","Button","GridList","GridListTile","GridListTileBar","Grid","Link","InfoIcon","Main","constructor","state","products","page","productInfo","prevPage","pageNumber","setState","loadProducts","nextPage","divInfiniteScrollRef","createRef","componentDidMount","intersectionObserver","IntersectionObserver","console","log","response","get","data","render","map","download_url","id","author"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport api from \"../../services/api\";\nimport {\n  Button,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  Grid,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles.css\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nexport default class Main extends Component {\n  divInfiniteScrollRef;\n\n  state = {\n    products: [],\n    page: 1,\n    productInfo: {},\n  };\n\n  constructor(){\n    super();\n    this.divInfiniteScrollRef = React.createRef();\n  }\n  \n\n  componentDidMount() {\n    const intersectionObserver = new IntersectionObserver();\n    console.log(intersectionObserver);\n\n    this.loadProducts();\n  }\n  componentDidMount() { async (page = 1) => {\n    const response = await api.get(`/v2/list?page=${page}&limit=30`);\n    console.log(response.data);\n    this.setState({ products: response.data });\n  };\n}\n\n  prevPage = () => {\n    const { page } = this.state;\n\n    if (page === 1) {\n      return;\n    }\n\n    const pageNumber = page - 1;\n    this.setState({ page: pageNumber });\n    this.loadProducts(pageNumber);\n  };\n\n  nextPage = () => {\n    const { page } = this.state;\n\n    const pageNumber = page + 1;\n    this.setState({ page: pageNumber });\n    this.loadProducts(pageNumber);\n  };\n\n  render() {\n    const { page } = this.state;\n\n    return (\n      <div className=\"product-list\">\n        <GridList cellHeight={180} className=\"grid\">\n          {this.state.products.map((products) => (\n            <GridListTile key={products.id}>\n              <img src={products.download_url} width=\"200\" height=\"200\"></img>\n              <GridListTileBar\n                title={products.id}\n                subtitle={<span> {products.author}</span>}\n                actionIcon={\n                  <Link to={`/products/${products.id}`}>\n                    <InfoIcon className=\"button\" />\n                  </Link>\n                }\n              />\n            </GridListTile>\n          ))}\n        </GridList>\n\n        <Grid container spacing={1}>\n          <Button\n            className=\"pagesleft\"\n            variant=\"contained\"\n            disabled={page === 1}\n            onClick={this.prevPage}\n          >\n            Anterior\n          </Button>\n\n          <Button\n            className=\"pagesright\"\n            variant=\"contained\"\n            onClick={this.nextPage}\n          >\n            Próxima\n          </Button>\n        </Grid>\n        <div ref={this.divInfiniteScrollRef}></div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}